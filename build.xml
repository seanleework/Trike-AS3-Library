<project name="TRIKE" basedir="." default="swc">

	<!-- Set up a prefix for all environment variables. -->
	<!-- <property environment="env"/> -->
	
	<!-- <fail unless="env.FLEX_HOME" message="FLEX_HOME needs to be defined as an environment variable or in the Ant build." /> -->
	<!-- Copy Flex SDK location from environment variable. This can be set manually instead. -->
	<!-- <property name="FLEX_HOME" value="${env.FLEX_HOME}" /> -->
	<property file="build.properties"/>

	<target name="swc" depends="" description="Compile AS3 code into a SWC">
		<echo>Using Flex SDK at: ${FLEX_HOME}</echo>
			
		<java jar="${FLEX_HOME}/lib/compc.jar" dir="." fork="true" failonerror="true">
			<arg value="+flexlib=${FLEX_HOME}/frameworks" />
			<arg value="-incremental=true" />
				
			<arg value="-source-path+=${src.dir}" />
			
			<!-- Include all classes in this path. -->
			<arg value="-include-sources=${src.dir}/${package.dir}" />
			
			<!-- List of SWC files or directories to compile against but to omit from linking -->
			<arg value="-external-library-path+=${libs.dir}" />
			
			<arg value="-output=${output.swc}" />
		</java>
			
	</target>
	
	<target name="clean-asdoc">
		<delete dir="${docs.dir}" failOnError="false" includeEmptyDirs="true"/>
		<mkdir dir="${docs.dir}"/>
	</target>
	
	<!-- Build Documentation -->
	<target name="asdoc" depends="swc,clean-asdoc" description="Create API docs for ${project.title}">
		<echo>Generating ASDOC documentation...</echo>
		<tstamp>
			<format property="docgen.time" pattern="MM/dd/yyyy hh:mm aa" unit="hour"/>
		</tstamp>
		
		<exec executable="${ASDOC}">
            <arg line="-source-path ${src.dir}
                       -doc-sources ${src.dir}
                       -output ${docs.dir}
                       -window-title '${project.title} ${ver.num}'
                       -main-title '${project.title} ${ver.num}'
                       -footer '${project.title} - Documentation generated at: ${docgen.time}'"/>
        </exec>
		<echo>ASDOC documentation generated successfully</echo>
	</target>
	
</project>
